package com.ait.model;

// Generated 14.10.2014 08:53:28 by Hibernate Tools 4.0.0

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Usergroupproject generated by hbm2java
 */
@Entity
@Table(name = "usergroupproject", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {
		"prjid", "userid" }))
public class Usergroupproject implements java.io.Serializable {

	private long usergroupprojectid;
	private Project project;
	private Appuser appuser;
	private Usergroup usergroup;

	public Usergroupproject() {
	}

	public Usergroupproject(long usergroupprojectid, Project project,
			Appuser appuser, Usergroup usergroup) {
		this.usergroupprojectid = usergroupprojectid;
		this.project = project;
		this.appuser = appuser;
		this.usergroup = usergroup;
	}
	
	@SequenceGenerator(name="usergroupproject_usergroupprojectid_seq",sequenceName="usergroupproject_usergroupprojectid_seq")
	  @GeneratedValue(strategy = GenerationType.SEQUENCE,
  generator="usergroupproject_usergroupprojectid_seq")
	@Id
	@Column(name = "usergroupprojectid", unique = true, nullable = false)
	public long getUsergroupprojectid() {
		return this.usergroupprojectid;
	}

	public void setUsergroupprojectid(long usergroupprojectid) {
		this.usergroupprojectid = usergroupprojectid;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.PERSIST)
	@JoinColumn(name = "prjid", nullable = false)
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.PERSIST)
	@JoinColumn(name = "userid", nullable = false)
	public Appuser getAppuser() {
		return this.appuser;
	}

	public void setAppuser(Appuser appuser) {
		this.appuser = appuser;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.PERSIST)
	@JoinColumn(name = "usergroupid", nullable = false)
	public Usergroup getUsergroup() {
		return this.usergroup;
	}

	public void setUsergroup(Usergroup usergroup) {
		this.usergroup = usergroup;
	}

}
