package com.cityopt.model;

// Generated 14.10.2014 08:53:28 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Type generated by hbm2java
 */
@Entity
@Table(name = "type", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "typename"))
public class Type implements java.io.Serializable {

	private int typeid;
	private String typename;
	private Set<Timeseries> timeserieses = new HashSet<Timeseries>(0);
	private Set<Objectivefunction> objectivefunctions = new HashSet<Objectivefunction>(
			0);
	private Set<Unit> units = new HashSet<Unit>(0);

	public Type() {
	}

	public Type(int typeid) {
		this.typeid = typeid;
	}

	public Type(int typeid, String typename, Set<Timeseries> timeserieses,
			Set<Objectivefunction> objectivefunctions, Set<Unit> units) {
		this.typeid = typeid;
		this.typename = typename;
		this.timeserieses = timeserieses;
		this.objectivefunctions = objectivefunctions;
		this.units = units;
	}

	@SequenceGenerator(name="type_typeid_seq",sequenceName="type_typeid_seq")
	  @GeneratedValue(strategy = GenerationType.SEQUENCE,
    generator="type_typeid_seq")
	@Id
	@Column(name = "typeid", unique = true, nullable = false)
	public int getTypeid() {
		return this.typeid;
	}

	public void setTypeid(int typeid) {
		this.typeid = typeid;
	}

	@Column(name = "typename", unique = true, length = 50)
	public String getTypename() {
		return this.typename;
	}

	public void setTypename(String typename) {
		this.typename = typename;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
	public Set<Timeseries> getTimeserieses() {
		return this.timeserieses;
	}

	public void setTimeserieses(Set<Timeseries> timeserieses) {
		this.timeserieses = timeserieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
	public Set<Objectivefunction> getObjectivefunctions() {
		return this.objectivefunctions;
	}

	public void setObjectivefunctions(Set<Objectivefunction> objectivefunctions) {
		this.objectivefunctions = objectivefunctions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
	public Set<Unit> getUnits() {
		return this.units;
	}

	public void setUnits(Set<Unit> units) {
		this.units = units;
	}

}
