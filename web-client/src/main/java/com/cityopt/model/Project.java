package com.cityopt.model;

// Generated 14.10.2014 08:53:28 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "project", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "prjname"))
public class Project implements java.io.Serializable {

	private int prjid;
	private Simulationmodel simulationmodel;
	private String prjname;
	private String prjdesigntarget;
	private Date prjtimehorizon;
	private String prjlocation;
	private Date createdon;
	private Date updatedon;
	private Integer createdby;
	private Integer updatedby;
	private Set<Scenariogenerator> scenariogenerators = new HashSet<Scenariogenerator>(
			0);
	private Set<Extparam> extparams = new HashSet<Extparam>(0);
	private Set<Usergroupproject> usergroupprojects = new HashSet<Usergroupproject>(
			0);
	private Set<Scenario> scenarios = new HashSet<Scenario>(0);
	private Set<Metric> metrics = new HashSet<Metric>(0);
	private Set<Optconstraint> optconstraints = new HashSet<Optconstraint>(0);
	private Set<Component> components = new HashSet<Component>(0);
	private Set<Searchconstraint> searchconstraints = new HashSet<Searchconstraint>(
			0);
	private Set<Objectivefunction> objectivefunctions = new HashSet<Objectivefunction>(
			0);

	public Project() {
	}

	public Project(int prjid, String prjname) {
		this.prjid = prjid;
		this.prjname = prjname;
	}

	public Project(int prjid, Simulationmodel simulationmodel, String prjname,
			String prjdesigntarget, Date prjtimehorizon, String prjlocation,
			Date createdon, Date updatedon, Integer createdby,
			Integer updatedby, Set<Scenariogenerator> scenariogenerators,
			Set<Extparam> extparams, Set<Usergroupproject> usergroupprojects,
			Set<Scenario> scenarios, Set<Metric> metrics,
			Set<Optconstraint> optconstraints, Set<Component> components,
			Set<Searchconstraint> searchconstraints,
			Set<Objectivefunction> objectivefunctions) {
		this.prjid = prjid;
		this.simulationmodel = simulationmodel;
		this.prjname = prjname;
		this.prjdesigntarget = prjdesigntarget;
		this.prjtimehorizon = prjtimehorizon;
		this.prjlocation = prjlocation;
		this.createdon = createdon;
		this.updatedon = updatedon;
		this.createdby = createdby;
		this.updatedby = updatedby;
		this.scenariogenerators = scenariogenerators;
		this.extparams = extparams;
		this.usergroupprojects = usergroupprojects;
		this.scenarios = scenarios;
		this.metrics = metrics;
		this.optconstraints = optconstraints;
		this.components = components;
		this.searchconstraints = searchconstraints;
		this.objectivefunctions = objectivefunctions;
	}

	@SequenceGenerator(name="project_prjid_seq",sequenceName="project_prjid_seq")
	  @GeneratedValue(strategy = GenerationType.SEQUENCE,
    generator="project_prjid_seq")
	@Id
	@Column(name = "prjid", unique = true, nullable = false)
	public int getPrjid() {
		return this.prjid;
	}

	public void setPrjid(int prjid) {
		this.prjid = prjid;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.PERSIST)
	@JoinColumn(name = "modelid")
	public Simulationmodel getSimulationmodel() {
		return this.simulationmodel;
	}

	public void setSimulationmodel(Simulationmodel simulationmodel) {
		this.simulationmodel = simulationmodel;
	}

	@Column(name = "prjname", unique = true, nullable = false, length = 50)
	public String getPrjname() {
		return this.prjname;
	}

	public void setPrjname(String prjname) {
		this.prjname = prjname;
	}

	@Column(name = "prjdesigntarget", length = 50)
	public String getPrjdesigntarget() {
		return this.prjdesigntarget;
	}

	public void setPrjdesigntarget(String prjdesigntarget) {
		this.prjdesigntarget = prjdesigntarget;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "prjtimehorizon", length = 15)
	public Date getPrjtimehorizon() {
		return this.prjtimehorizon;
	}

	public void setPrjtimehorizon(Date prjtimehorizon) {
		this.prjtimehorizon = prjtimehorizon;
	}

	@Column(name = "prjlocation")
	public String getPrjlocation() {
		return this.prjlocation;
	}

	public void setPrjlocation(String prjlocation) {
		this.prjlocation = prjlocation;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdon", length = 22)
	public Date getCreatedon() {
		return this.createdon;
	}

	public void setCreatedon(Date createdon) {
		this.createdon = createdon;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedon", length = 22)
	public Date getUpdatedon() {
		return this.updatedon;
	}

	public void setUpdatedon(Date updatedon) {
		this.updatedon = updatedon;
	}

	@Column(name = "createdby")
	public Integer getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(Integer createdby) {
		this.createdby = createdby;
	}

	@Column(name = "updatedby")
	public Integer getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(Integer updatedby) {
		this.updatedby = updatedby;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Scenariogenerator> getScenariogenerators() {
		return this.scenariogenerators;
	}

	public void setScenariogenerators(Set<Scenariogenerator> scenariogenerators) {
		this.scenariogenerators = scenariogenerators;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Extparam> getExtparams() {
		return this.extparams;
	}

	public void setExtparams(Set<Extparam> extparams) {
		this.extparams = extparams;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Usergroupproject> getUsergroupprojects() {
		return this.usergroupprojects;
	}

	public void setUsergroupprojects(Set<Usergroupproject> usergroupprojects) {
		this.usergroupprojects = usergroupprojects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Scenario> getScenarios() {
		return this.scenarios;
	}

	public void setScenarios(Set<Scenario> scenarios) {
		this.scenarios = scenarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Metric> getMetrics() {
		return this.metrics;
	}

	public void setMetrics(Set<Metric> metrics) {
		this.metrics = metrics;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Optconstraint> getOptconstraints() {
		return this.optconstraints;
	}

	public void setOptconstraints(Set<Optconstraint> optconstraints) {
		this.optconstraints = optconstraints;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Component> getComponents() {
		return this.components;
	}

	public void setComponents(Set<Component> components) {
		this.components = components;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Searchconstraint> getSearchconstraints() {
		return this.searchconstraints;
	}

	public void setSearchconstraints(Set<Searchconstraint> searchconstraints) {
		this.searchconstraints = searchconstraints;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Objectivefunction> getObjectivefunctions() {
		return this.objectivefunctions;
	}

	public void setObjectivefunctions(Set<Objectivefunction> objectivefunctions) {
		this.objectivefunctions = objectivefunctions;
	}

}
