package com.cityopt.model;

// Generated 14.10.2014 08:53:28 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Objectivefunction generated by hbm2java
 */
@Entity
@Table(name = "objectivefunction", schema = "public")
public class Objectivefunction implements java.io.Serializable {

	private int obtfunctionid;
	private Project project;
	private Type type;
	private String optexpression;
	private Boolean ismaximise;
	private Set<Optimizationset> optimizationsets = new HashSet<Optimizationset>(
			0);
	private Set<Scengenobjectivefunction> scengenobjectivefunctions = new HashSet<Scengenobjectivefunction>(
			0);

	public Objectivefunction() {
	}

	public Objectivefunction(int obtfunctionid) {
		this.obtfunctionid = obtfunctionid;
	}

	public Objectivefunction(int obtfunctionid, Project project, Type type,
			String optexpression, Boolean ismaximise,
			Set<Optimizationset> optimizationsets,
			Set<Scengenobjectivefunction> scengenobjectivefunctions) {
		this.obtfunctionid = obtfunctionid;
		this.project = project;
		this.type = type;
		this.optexpression = optexpression;
		this.ismaximise = ismaximise;
		this.optimizationsets = optimizationsets;
		this.scengenobjectivefunctions = scengenobjectivefunctions;
	}

	@SequenceGenerator(name="objectivefunction_obtfunctionid_seq",sequenceName="objectivefunction_obtfunctionid_seq")
	  @GeneratedValue(strategy = GenerationType.SEQUENCE,
  generator="objectivefunction_obtfunctionid_seq")
	@Id
	@Column(name = "obtfunctionid", unique = true, nullable = false)
	public int getObtfunctionid() {
		return this.obtfunctionid;
	}

	public void setObtfunctionid(int obtfunctionid) {
		this.obtfunctionid = obtfunctionid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "prjid")
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "typeid")
	public Type getType() {
		return this.type;
	}

	public void setType(Type type) {
		this.type = type;
	}

	@Column(name = "optexpression", length = 500)
	public String getOptexpression() {
		return this.optexpression;
	}

	public void setOptexpression(String optexpression) {
		this.optexpression = optexpression;
	}

	@Column(name = "ismaximise")
	public Boolean getIsmaximise() {
		return this.ismaximise;
	}

	public void setIsmaximise(Boolean ismaximise) {
		this.ismaximise = ismaximise;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "objectivefunction")
	public Set<Optimizationset> getOptimizationsets() {
		return this.optimizationsets;
	}

	public void setOptimizationsets(Set<Optimizationset> optimizationsets) {
		this.optimizationsets = optimizationsets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "objectivefunction")
	public Set<Scengenobjectivefunction> getScengenobjectivefunctions() {
		return this.scengenobjectivefunctions;
	}

	public void setScengenobjectivefunctions(
			Set<Scengenobjectivefunction> scengenobjectivefunctions) {
		this.scengenobjectivefunctions = scengenobjectivefunctions;
	}

}
