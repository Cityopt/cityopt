package eu.cityopt.model;

// Generated 13.11.2014 15:13:00 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * Scenariogenerator generated by hbm2java
 */


@Entity
@Table(name = "scenariogenerator", schema = "public",uniqueConstraints = @UniqueConstraint(columnNames = {
		"prjid", "name" }))
public class ScenarioGenerator extends VersionModel implements java.io.Serializable {

	private int scengenid;
	private Algorithm algorithm;
	private ExtParamValSet extparamvalset;
	private Project project;
	private String status;
	private String log;
	private String name;
	private String description;
	private Set<DecisionVariable> decisionvariables = new HashSet<DecisionVariable>(
			0);
	private Set<ModelParameter> modelparameters = new HashSet<ModelParameter>(0);
	private Set<ScenGenResult> scengenresults = new HashSet<ScenGenResult>(0);
	private Set<ScenGenOptConstraint> scengenoptconstraints = new HashSet<ScenGenOptConstraint>(
			0);
	private Set<Scenario> scenarios = new HashSet<Scenario>(0);
	private Set<AlgoParamVal> algoparamvals = new HashSet<AlgoParamVal>(0);
	private Set<ScenGenObjectiveFunction> scengenobjectivefunctions = new HashSet<ScenGenObjectiveFunction>(
			0);

	public ScenarioGenerator() {
	}

	public ScenarioGenerator(int scengenid) {
		this.scengenid = scengenid;
	}

	public ScenarioGenerator(int scengenid, Algorithm algorithm,
			ExtParamValSet extparamvalset, Project project, String status,
			String log, String name,String description, Set<DecisionVariable> decisionvariables,
			Set<ModelParameter> modelparameters,
			Set<ScenGenResult> scengenresults,
			Set<ScenGenOptConstraint> scengenoptconstraints,
			Set<Scenario> scenarios, Set<AlgoParamVal> algoparamvals,
			Set<ScenGenObjectiveFunction> scengenobjectivefunctions) {
		this.scengenid = scengenid;
		this.algorithm = algorithm;
		this.extparamvalset = extparamvalset;
		this.project = project;
		this.status = status;
		this.log = log;
		this.name = name;
		this.description=description;
		this.decisionvariables = decisionvariables;
		this.modelparameters = modelparameters;
		this.scengenresults = scengenresults;
		this.scengenoptconstraints = scengenoptconstraints;
		this.scenarios = scenarios;
		this.algoparamvals = algoparamvals;
		this.scengenobjectivefunctions = scengenobjectivefunctions;
	}
	
	public ScenarioGenerator clone() {
		ScenarioGenerator c = new ScenarioGenerator();
		c.scengenid = this.scengenid;
		c.algorithm = this.algorithm;
		c.extparamvalset = this.extparamvalset;
		c.project = this.project;
		c.status = this.status;
		c.log = this.log;
		c.name = this.name;
		c.description=this.description;
		c.decisionvariables = this.decisionvariables;
		c.modelparameters = this.modelparameters;
		c.scengenoptconstraints = this.scengenoptconstraints;
		c.scenarios = this.scenarios;
		c.algoparamvals = this.algoparamvals;
		c.scengenobjectivefunctions = this.scengenobjectivefunctions;
		return c;
	}

	@SequenceGenerator(name="scenariogenerator_scengenid_seq",sequenceName="scenariogenerator_scengenid_seq") @GeneratedValue(strategy = GenerationType.SEQUENCE, generator="scenariogenerator_scengenid_seq")
	@Id
	@Column(name = "scengenid", unique = true, nullable = false)
	public int getScengenid() {
		return this.scengenid;
	}

	public void setScengenid(int scengenid) {
		this.scengenid = scengenid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "algorithmid")
	public Algorithm getAlgorithm() {
		return this.algorithm;
	}

	public void setAlgorithm(Algorithm algorithm) {
		this.algorithm = algorithm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "extparamvalsetid")
	public ExtParamValSet getExtparamvalset() {
		return this.extparamvalset;
	}

	public void setExtparamvalset(ExtParamValSet extparamvalset) {
		this.extparamvalset = extparamvalset;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "prjid")
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@Column(name = "status", length = 50)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "log")
	public String getLog() {
		return this.log;
	}

	public void setLog(String log) {
		this.log = log;
	}
	
	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator")
	public Set<DecisionVariable> getDecisionvariables() {
		return this.decisionvariables;
	}

	public void setDecisionvariables(Set<DecisionVariable> decisionvariables) {
		this.decisionvariables = decisionvariables;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator",cascade=CascadeType.REMOVE)
	public Set<ModelParameter> getModelparameters() {
		return this.modelparameters;
	}

	public void setModelparameters(Set<ModelParameter> modelparameters) {
		this.modelparameters = modelparameters;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator",cascade=CascadeType.REMOVE)
	public Set<ScenGenResult> getScengenresults() {
		return this.scengenresults;
	}

	public void setScengenresults(Set<ScenGenResult> scengenresults) {
		this.scengenresults = scengenresults;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator",cascade=CascadeType.REMOVE)
	public Set<ScenGenOptConstraint> getScengenoptconstraints() {
		return this.scengenoptconstraints;
	}

	public void setScengenoptconstraints(
			Set<ScenGenOptConstraint> scengenoptconstraints) {
		this.scengenoptconstraints = scengenoptconstraints;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator", cascade=CascadeType.REMOVE)
	public Set<Scenario> getScenarios() {
		return this.scenarios;
	}

	public void setScenarios(Set<Scenario> scenarios) {
		this.scenarios = scenarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator",cascade=CascadeType.REMOVE)
	public Set<AlgoParamVal> getAlgoparamvals() {
		return this.algoparamvals;
	}

	public void setAlgoparamvals(Set<AlgoParamVal> algoparamvals) {
		this.algoparamvals = algoparamvals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator",cascade=CascadeType.REMOVE)
	public Set<ScenGenObjectiveFunction> getScengenobjectivefunctions() {
		return this.scengenobjectivefunctions;
	}

	public void setScengenobjectivefunctions(
			Set<ScenGenObjectiveFunction> scengenobjectivefunctions) {
		this.scengenobjectivefunctions = scengenobjectivefunctions;
	}
	
	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

}
