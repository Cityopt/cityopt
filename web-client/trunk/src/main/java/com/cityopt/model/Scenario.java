package com.cityopt.model;

// Generated 14.10.2014 08:53:28 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Scenario generated by hbm2java
 */
@Entity
@Table(name = "scenario", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {
		"prjid", "scenname" }))
public class Scenario implements java.io.Serializable {

	private int scenid;
	private Scenariogenerator scenariogenerator;
	private Project project;
	private String scenname;
	private String scendesc;
	private Date createdon;
	private Date updatedon;
	private Integer createdby;
	private Integer updatedby;
	private Set<Metricval> metricvals = new HashSet<Metricval>(0);
	private Set<Simulationresult> simulationresults = new HashSet<Simulationresult>(
			0);
	private Set<Scenariodefinition> scenariodefinitions = new HashSet<Scenariodefinition>(
			0);
	private Set<Optimizationset> optimizationsets = new HashSet<Optimizationset>(
			0);
	private Set<Extparamval> extparamvals = new HashSet<Extparamval>(0);

	public Scenario() {
	}

	public Scenario(int scenid, Project project, String scenname) {
		this.scenid = scenid;
		this.project = project;
		this.scenname = scenname;
	}

	public Scenario(int scenid, Scenariogenerator scenariogenerator,
			Project project, String scenname, String scendesc, Date createdon,
			Date updatedon, Integer createdby, Integer updatedby,
			Set<Metricval> metricvals, Set<Simulationresult> simulationresults,
			Set<Scenariodefinition> scenariodefinitions,
			Set<Optimizationset> optimizationsets, Set<Extparamval> extparamvals) {
		this.scenid = scenid;
		this.scenariogenerator = scenariogenerator;
		this.project = project;
		this.scenname = scenname;
		this.scendesc = scendesc;
		this.createdon = createdon;
		this.updatedon = updatedon;
		this.createdby = createdby;
		this.updatedby = updatedby;
		this.metricvals = metricvals;
		this.simulationresults = simulationresults;
		this.scenariodefinitions = scenariodefinitions;
		this.optimizationsets = optimizationsets;
		this.extparamvals = extparamvals;
	}

	@SequenceGenerator(name="scenario_scenid_seq",sequenceName="scenario_scenid_seq")
	  @GeneratedValue(strategy = GenerationType.SEQUENCE,
    generator="scenario_scenid_seq")
	@Id
	@Column(name = "scenid", unique = true, nullable = false)
	public int getScenid() {
		return this.scenid;
	}

	public void setScenid(int scenid) {
		this.scenid = scenid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "scengenid")
	public Scenariogenerator getScenariogenerator() {
		return this.scenariogenerator;
	}

	public void setScenariogenerator(Scenariogenerator scenariogenerator) {
		this.scenariogenerator = scenariogenerator;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "prjid", nullable = false)
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@Column(name = "scenname", nullable = false, length = 50)
	public String getScenname() {
		return this.scenname;
	}

	public void setScenname(String scenname) {
		this.scenname = scenname;
	}

	@Column(name = "scendesc", length = 500)
	public String getScendesc() {
		return this.scendesc;
	}

	public void setScendesc(String scendesc) {
		this.scendesc = scendesc;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdon", length = 22)
	public Date getCreatedon() {
		return this.createdon;
	}

	public void setCreatedon(Date createdon) {
		this.createdon = createdon;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedon", length = 22)
	public Date getUpdatedon() {
		return this.updatedon;
	}

	public void setUpdatedon(Date updatedon) {
		this.updatedon = updatedon;
	}

	@Column(name = "createdby")
	public Integer getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(Integer createdby) {
		this.createdby = createdby;
	}

	@Column(name = "updatedby")
	public Integer getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(Integer updatedby) {
		this.updatedby = updatedby;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenario")
	public Set<Metricval> getMetricvals() {
		return this.metricvals;
	}

	public void setMetricvals(Set<Metricval> metricvals) {
		this.metricvals = metricvals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenario")
	public Set<Simulationresult> getSimulationresults() {
		return this.simulationresults;
	}

	public void setSimulationresults(Set<Simulationresult> simulationresults) {
		this.simulationresults = simulationresults;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenario")
	public Set<Scenariodefinition> getScenariodefinitions() {
		return this.scenariodefinitions;
	}

	public void setScenariodefinitions(
			Set<Scenariodefinition> scenariodefinitions) {
		this.scenariodefinitions = scenariodefinitions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenario")
	public Set<Optimizationset> getOptimizationsets() {
		return this.optimizationsets;
	}

	public void setOptimizationsets(Set<Optimizationset> optimizationsets) {
		this.optimizationsets = optimizationsets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenario")
	public Set<Extparamval> getExtparamvals() {
		return this.extparamvals;
	}

	public void setExtparamvals(Set<Extparamval> extparamvals) {
		this.extparamvals = extparamvals;
	}

}
