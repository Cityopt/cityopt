package com.cityopt.model;

// Generated 13.11.2014 15:13:00 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "project", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Project implements java.io.Serializable {

	private int prjid;
	private SimulationModel simulationmodel;
	private String name;
	private String designtarget;
	private Date timehorizon;
	private String location;
	private Date createdon;
	private Date updatedon;
	private Integer createdby;
	private Integer updatedby;
	private Set<ObjectiveFunction> objectivefunctions = new HashSet<ObjectiveFunction>(
			0);
	private Set<Scenario> scenarios = new HashSet<Scenario>(0);
	private Set<ScenarioGenerator> scenariogenerators = new HashSet<ScenarioGenerator>(
			0);
	private Set<Component> components = new HashSet<Component>(0);
	private Set<OptConstraint> optconstraints = new HashSet<OptConstraint>(0);
	private Set<SearchConstraint> searchconstraints = new HashSet<SearchConstraint>(
			0);
	private Set<Metric> metrics = new HashSet<Metric>(0);
	private Set<UserGroupProject> usergroupprojects = new HashSet<UserGroupProject>(
			0);
	private Set<ExtParam> extparams = new HashSet<ExtParam>(0);

	public Project() {
	}

	public Project(int prjid, String name) {
		this.prjid = prjid;
		this.name = name;
	}

	public Project(int prjid, SimulationModel simulationmodel, String name,
			String designtarget, Date timehorizon, String location,
			Date createdon, Date updatedon, Integer createdby,
			Integer updatedby, Set<ObjectiveFunction> objectivefunctions,
			Set<Scenario> scenarios, Set<ScenarioGenerator> scenariogenerators,
			Set<Component> components, Set<OptConstraint> optconstraints,
			Set<SearchConstraint> searchconstraints, Set<Metric> metrics,
			Set<UserGroupProject> usergroupprojects, Set<ExtParam> extparams) {
		this.prjid = prjid;
		this.simulationmodel = simulationmodel;
		this.name = name;
		this.designtarget = designtarget;
		this.timehorizon = timehorizon;
		this.location = location;
		this.createdon = createdon;
		this.updatedon = updatedon;
		this.createdby = createdby;
		this.updatedby = updatedby;
		this.objectivefunctions = objectivefunctions;
		this.scenarios = scenarios;
		this.scenariogenerators = scenariogenerators;
		this.components = components;
		this.optconstraints = optconstraints;
		this.searchconstraints = searchconstraints;
		this.metrics = metrics;
		this.usergroupprojects = usergroupprojects;
		this.extparams = extparams;
	}

	@SequenceGenerator(name="project_prjid_seq",sequenceName="project_prjid_seq") @GeneratedValue(strategy = GenerationType.SEQUENCE, generator="project_prjid_seq")
	@Id
	@Column(name = "prjid", unique = true, nullable = false)
	public int getPrjid() {
		return this.prjid;
	}

	public void setPrjid(int prjid) {
		this.prjid = prjid;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.PERSIST)
	@JoinColumn(name = "modelid")
	public SimulationModel getSimulationmodel() {
		return this.simulationmodel;
	}

	public void setSimulationmodel(SimulationModel simulationmodel) {
		this.simulationmodel = simulationmodel;
	}

	@Column(name = "name", unique = true, nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "designtarget", length = 50)
	public String getDesigntarget() {
		return this.designtarget;
	}

	public void setDesigntarget(String designtarget) {
		this.designtarget = designtarget;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "timehorizon", length = 15)
	public Date getTimehorizon() {
		return this.timehorizon;
	}

	public void setTimehorizon(Date timehorizon) {
		this.timehorizon = timehorizon;
	}

	@Column(name = "location")
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdon", length = 22)
	public Date getCreatedon() {
		return this.createdon;
	}

	public void setCreatedon(Date createdon) {
		this.createdon = createdon;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedon", length = 22)
	public Date getUpdatedon() {
		return this.updatedon;
	}

	public void setUpdatedon(Date updatedon) {
		this.updatedon = updatedon;
	}

	@Column(name = "createdby")
	public Integer getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(Integer createdby) {
		this.createdby = createdby;
	}

	@Column(name = "updatedby")
	public Integer getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(Integer updatedby) {
		this.updatedby = updatedby;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<ObjectiveFunction> getObjectivefunctions() {
		return this.objectivefunctions;
	}

	public void setObjectivefunctions(Set<ObjectiveFunction> objectivefunctions) {
		this.objectivefunctions = objectivefunctions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Scenario> getScenarios() {
		return this.scenarios;
	}

	public void setScenarios(Set<Scenario> scenarios) {
		this.scenarios = scenarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<ScenarioGenerator> getScenariogenerators() {
		return this.scenariogenerators;
	}

	public void setScenariogenerators(Set<ScenarioGenerator> scenariogenerators) {
		this.scenariogenerators = scenariogenerators;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Component> getComponents() {
		return this.components;
	}

	public void setComponents(Set<Component> components) {
		this.components = components;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<OptConstraint> getOptconstraints() {
		return this.optconstraints;
	}

	public void setOptconstraints(Set<OptConstraint> optconstraints) {
		this.optconstraints = optconstraints;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<SearchConstraint> getSearchconstraints() {
		return this.searchconstraints;
	}

	public void setSearchconstraints(Set<SearchConstraint> searchconstraints) {
		this.searchconstraints = searchconstraints;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<Metric> getMetrics() {
		return this.metrics;
	}

	public void setMetrics(Set<Metric> metrics) {
		this.metrics = metrics;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<UserGroupProject> getUsergroupprojects() {
		return this.usergroupprojects;
	}

	public void setUsergroupprojects(Set<UserGroupProject> usergroupprojects) {
		this.usergroupprojects = usergroupprojects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<ExtParam> getExtparams() {
		return this.extparams;
	}

	public void setExtparams(Set<ExtParam> extparams) {
		this.extparams = extparams;
	}

}
