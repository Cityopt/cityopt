package com.cityopt.model;

// Generated 13.11.2014 15:13:00 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Scenariogenerator generated by hbm2java
 */
@Entity
@Table(name = "scenariogenerator", schema = "public")
public class Scenariogenerator implements java.io.Serializable {

	private int scengenid;
	private Algorithm algorithm;
	private Project project;
	private Set<Decisionvariable> decisionvariables = new HashSet<Decisionvariable>(
			0);
	private Set<Modelparameter> modelparameters = new HashSet<Modelparameter>(0);
	private Set<Scengenoptconstraint> scengenoptconstraints = new HashSet<Scengenoptconstraint>(
			0);
	private Set<Scenario> scenarios = new HashSet<Scenario>(0);
	private Set<Algoparamval> algoparamvals = new HashSet<Algoparamval>(0);
	private Set<Extparamvalscengen> extparamvalscengens = new HashSet<Extparamvalscengen>(
			0);
	private Set<Scengenobjectivefunction> scengenobjectivefunctions = new HashSet<Scengenobjectivefunction>(
			0);

	public Scenariogenerator() {
	}

	public Scenariogenerator(int scengenid) {
		this.scengenid = scengenid;
	}

	public Scenariogenerator(int scengenid, Algorithm algorithm,
			Project project, Set<Decisionvariable> decisionvariables,
			Set<Modelparameter> modelparameters,
			Set<Scengenoptconstraint> scengenoptconstraints,
			Set<Scenario> scenarios, Set<Algoparamval> algoparamvals,
			Set<Extparamvalscengen> extparamvalscengens,
			Set<Scengenobjectivefunction> scengenobjectivefunctions) {
		this.scengenid = scengenid;
		this.algorithm = algorithm;
		this.project = project;
		this.decisionvariables = decisionvariables;
		this.modelparameters = modelparameters;
		this.scengenoptconstraints = scengenoptconstraints;
		this.scenarios = scenarios;
		this.algoparamvals = algoparamvals;
		this.extparamvalscengens = extparamvalscengens;
		this.scengenobjectivefunctions = scengenobjectivefunctions;
	}

	@SequenceGenerator(name="scenariogenerator_scengenid_seq",sequenceName="scenariogenerator_scengenid_seq") @GeneratedValue(strategy = GenerationType.SEQUENCE, generator="scenariogenerator_scengenid_seq")
	@Id
	@Column(name = "scengenid", unique = true, nullable = false)
	public int getScengenid() {
		return this.scengenid;
	}

	public void setScengenid(int scengenid) {
		this.scengenid = scengenid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "algorithmid")
	public Algorithm getAlgorithm() {
		return this.algorithm;
	}

	public void setAlgorithm(Algorithm algorithm) {
		this.algorithm = algorithm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "prjid")
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator")
	public Set<Decisionvariable> getDecisionvariables() {
		return this.decisionvariables;
	}

	public void setDecisionvariables(Set<Decisionvariable> decisionvariables) {
		this.decisionvariables = decisionvariables;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator")
	public Set<Modelparameter> getModelparameters() {
		return this.modelparameters;
	}

	public void setModelparameters(Set<Modelparameter> modelparameters) {
		this.modelparameters = modelparameters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator")
	public Set<Scengenoptconstraint> getScengenoptconstraints() {
		return this.scengenoptconstraints;
	}

	public void setScengenoptconstraints(
			Set<Scengenoptconstraint> scengenoptconstraints) {
		this.scengenoptconstraints = scengenoptconstraints;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator")
	public Set<Scenario> getScenarios() {
		return this.scenarios;
	}

	public void setScenarios(Set<Scenario> scenarios) {
		this.scenarios = scenarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator")
	public Set<Algoparamval> getAlgoparamvals() {
		return this.algoparamvals;
	}

	public void setAlgoparamvals(Set<Algoparamval> algoparamvals) {
		this.algoparamvals = algoparamvals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator")
	public Set<Extparamvalscengen> getExtparamvalscengens() {
		return this.extparamvalscengens;
	}

	public void setExtparamvalscengens(
			Set<Extparamvalscengen> extparamvalscengens) {
		this.extparamvalscengens = extparamvalscengens;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenariogenerator")
	public Set<Scengenobjectivefunction> getScengenobjectivefunctions() {
		return this.scengenobjectivefunctions;
	}

	public void setScengenobjectivefunctions(
			Set<Scengenobjectivefunction> scengenobjectivefunctions) {
		this.scengenobjectivefunctions = scengenobjectivefunctions;
	}

}
