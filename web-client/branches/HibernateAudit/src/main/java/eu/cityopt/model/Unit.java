package eu.cityopt.model;

// Generated 13.11.2014 15:13:00 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.envers.Audited;

/**
 * Unit generated by hbm2java
 */
@Entity
@Audited
@Table(name = "unit", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Unit implements java.io.Serializable {

	private int unitid;
	private Type type;
	private String name;
	private Set<ExtParam> extparams = new HashSet<ExtParam>(0);
	private Set<SearchConstraint> searchconstraints = new HashSet<SearchConstraint>(
			0);
	private Set<InputParameter> inputparameters = new HashSet<InputParameter>(0);
	private Set<Metric> metrics = new HashSet<Metric>(0);

	public Unit() {
	}

	public Unit(int unitid) {
		this.unitid = unitid;
	}

	public Unit(int unitid, Type type, String name, Set<ExtParam> extparams,
			Set<SearchConstraint> searchconstraints,
			Set<InputParameter> inputparameters, Set<Metric> metrics) {
		this.unitid = unitid;
		this.type = type;
		this.name = name;
		this.extparams = extparams;
		this.searchconstraints = searchconstraints;
		this.inputparameters = inputparameters;
		this.metrics = metrics;
	}

	@SequenceGenerator(name="unit_unitid_seq",sequenceName="unit_unitid_seq") @GeneratedValue(strategy = GenerationType.SEQUENCE, generator="unit_unitid_seq")
	@Id
	@Column(name = "unitid", unique = true, nullable = false)
	public int getUnitid() {
		return this.unitid;
	}

	public void setUnitid(int unitid) {
		this.unitid = unitid;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade=CascadeType.PERSIST)
	@JoinColumn(name = "typeid")
	public Type getType() {
		return this.type;
	}

	public void setType(Type type) {
		this.type = type;
	}

	@Column(name = "name", unique = true, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unit")
	public Set<ExtParam> getExtparams() {
		return this.extparams;
	}

	public void setExtparams(Set<ExtParam> extparams) {
		this.extparams = extparams;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unit")
	public Set<SearchConstraint> getSearchconstraints() {
		return this.searchconstraints;
	}

	public void setSearchconstraints(Set<SearchConstraint> searchconstraints) {
		this.searchconstraints = searchconstraints;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unit")
	public Set<InputParameter> getInputparameters() {
		return this.inputparameters;
	}

	public void setInputparameters(Set<InputParameter> inputparameters) {
		this.inputparameters = inputparameters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unit")
	public Set<Metric> getMetrics() {
		return this.metrics;
	}

	public void setMetrics(Set<Metric> metrics) {
		this.metrics = metrics;
	}

}
