package eu.cityopt.model;

// Generated 13.11.2014 15:13:00 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Scenario generated by hbm2java
 */
@Entity
@Table(name = "scenario", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {
		"prjid", "name" }))
public class Scenario implements java.io.Serializable {

	private int scenid;
	private Project project;
	private ScenarioGenerator scenariogenerator;
	private String name;
	private String description;
	private Date createdon;
	private Date updatedon;
	private Integer createdby;
	private Integer updatedby;
	private Date runend;
	private Date runstart;
	private String status;
	private String log;
	private Set<ScenarioMetrics> scenariometricses = new HashSet<ScenarioMetrics>(
			0);
	private Set<InputParamVal> inputparamvals = new HashSet<InputParamVal>(0);
	private Set<OptimizationSet> optimizationsets = new HashSet<OptimizationSet>(
			0);
	private Set<SimulationResult> simulationresults = new HashSet<SimulationResult>(
			0);
	private Set<OptSetScenarios> optsetscenarioses = new HashSet<OptSetScenarios>(
			0);
	private Set<ScenGenResult> scengenresults = new HashSet<ScenGenResult>(0);

	public Scenario() {
	}

	public Scenario(int scenid, Project project, String name) {
		this.scenid = scenid;
		this.project = project;
		this.name = name;
	}

	public Scenario(int scenid, Project project,
			ScenarioGenerator scenariogenerator, String name,
			String description, Date createdon, Date updatedon,
			Integer createdby, Integer updatedby, Date runend, Date runstart,
			String status, String log,
			Set<ScenarioMetrics> scenariometricses,
			Set<InputParamVal> inputparamvals,
			Set<OptimizationSet> optimizationsets,
			Set<SimulationResult> simulationresults,
			Set<OptSetScenarios> optsetscenarioses,
			Set<ScenGenResult> scengenresults) {
		this.scenid = scenid;
		this.project = project;
		this.scenariogenerator = scenariogenerator;
		this.name = name;
		this.description = description;
		this.createdon = createdon;
		this.updatedon = updatedon;
		this.createdby = createdby;
		this.updatedby = updatedby;
		this.runend = runend;
		this.runstart = runstart;
		this.status = status;
		this.log = log;
		this.scenariometricses = scenariometricses;
		this.inputparamvals = inputparamvals;
		this.optimizationsets = optimizationsets;
		this.simulationresults = simulationresults;
		this.optsetscenarioses = optsetscenarioses;
		this.scengenresults = scengenresults;
	}
	
	public Scenario clone() {
		Scenario c = new Scenario();
		c.scenid = this.scenid;
		c.project = this.project;
		c.scenariogenerator = this.scenariogenerator;
		c.name = this.name;
		c.description = this.description;
		c.createdon = this.createdon;
		c.updatedon = this.updatedon;
		c.createdby = this.createdby;
		c.updatedby = this.updatedby;
		c.runend = this.runend;
		c.runstart = this.runstart;
		c.status = this.status;
		c.log = this.log;
		c.scenariometricses = this.scenariometricses;
		c.inputparamvals = this.inputparamvals;
		c.optimizationsets = this.optimizationsets;
		c.simulationresults = this.simulationresults;
		c.optsetscenarioses = this.optsetscenarioses;
		c.scengenresults = this.scengenresults;
		return c;
	}

	@SequenceGenerator(name="scenario_scenid_seq",sequenceName="scenario_scenid_seq") 
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator="scenario_scenid_seq")
	@Id
	@Column(name = "scenid", unique = true, nullable = false)
	public int getScenid() {
		return this.scenid;
	}

	public void setScenid(int scenid) {
		this.scenid = scenid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "prjid", nullable = false)
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "scengenid")
	public ScenarioGenerator getScenariogenerator() {
		return this.scenariogenerator;
	}

	public void setScenariogenerator(ScenarioGenerator scenariogenerator) {
		this.scenariogenerator = scenariogenerator;
	}

	@Column(name = "name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdon", length = 22)
	public Date getCreatedon() {
		return this.createdon;
	}

	public void setCreatedon(Date createdon) {
		this.createdon = createdon;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedon", length = 22)
	public Date getUpdatedon() {
		return this.updatedon;
	}

	public void setUpdatedon(Date updatedon) {
		this.updatedon = updatedon;
	}

	@Column(name = "createdby")
	public Integer getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(Integer createdby) {
		this.createdby = createdby;
	}

	@Column(name = "updatedby")
	public Integer getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(Integer updatedby) {
		this.updatedby = updatedby;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "runstart", length = 22)
	public Date getRunstart() {
		return this.runstart;
	}

	public void setRunstart(Date runstart) {
		this.runstart = runstart;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "runend", length = 22)
	public Date getRunend() {
		return this.runend;
	}

	public void setRunend(Date runend) {
		this.runend = runend;
	}
	
	@Column(name = "status", length = 50)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "log")
	public String getLog() {
		return this.log;
	}

	public void setLog(String log) {
		this.log = log;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenario", cascade=CascadeType.REMOVE)
	public Set<ScenarioMetrics> getScenariometricses() {
		return this.scenariometricses;
	}

	public void setScenariometricses(Set<ScenarioMetrics> scenariometricses) {
		this.scenariometricses = scenariometricses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenario", cascade={CascadeType.REMOVE})
	public Set<InputParamVal> getInputparamvals() {
		return this.inputparamvals;
	}

	public void setInputparamvals(Set<InputParamVal> inputparamvals) {
		this.inputparamvals = inputparamvals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenario", cascade=CascadeType.REMOVE)
	public Set<OptimizationSet> getOptimizationsets() {
		return this.optimizationsets;
	}

	public void setOptimizationsets(Set<OptimizationSet> optimizationsets) {
		this.optimizationsets = optimizationsets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenario", cascade={CascadeType.REMOVE})
	public Set<SimulationResult> getSimulationresults() {
		return this.simulationresults;
	}

	public void setSimulationresults(Set<SimulationResult> simulationresults) {
		this.simulationresults = simulationresults;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenario", cascade={CascadeType.REMOVE})
	public Set<OptSetScenarios> getOptsetscenarioses() {
		return this.optsetscenarioses;
	}

	public void setOptsetscenarioses(Set<OptSetScenarios> optsetscenarioses) {
		this.optsetscenarioses = optsetscenarioses;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scenario")
	public Set<ScenGenResult> getScengenresults() {
		return this.scengenresults;
	}

	public void setScengenresults(Set<ScenGenResult> scengenresults) {
		this.scengenresults = scengenresults;
	}
}
